{"version":3,"sources":["components/Header.jsx","components/Nav.jsx","pages/Description.jsx","components/CountryInfo.jsx","components/CovidInfo.jsx","components/SelectionList.jsx","UseLocalStorage.js","pages/Country.jsx","axios.js","pages/World.jsx","requests.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Nav","nav","links","useState","active","setActive","map","elem","i","onClick","onActive","to","Description","items","item","length","confirm","Math","floor","confirmed","recover","recovered","death","deaths","CountryInfo","selection","country","capital_city","continent","location","sq_km_area","toString","replace","CovidInfo","population","life_expectancy","toFixed","SelectionList","arr","handleOnClick","selectionItem","type","src","alt","abbreviation","useLocalStorage","key","initialValue","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Country","multiSelect","open","setOpen","setSelection","toggle","ref","useRef","useEffect","forEach","e","document","addEventListener","close","path","includes","current","filterArr","filter","tabIndex","role","onKeyPress","width","height","viewBox","fill","xmlns","d","some","cur","find","instance","axios","create","baseURL","World","fetchUrl","fetchUrl2","fetchUrl3","setConfirmed","setDeaths","setRecovered","a","get","request","data","Global","All","dates","fetchData","Object","keys","values","value2","value3","push","k","Confirmed","Recovered","Deaths","ResponsiveContainer","LineChart","CartesianGrid","XAxis","dataKey","tickFormatter","s","slice","YAxis","axisLine","tickLine","tickCount","n","Tooltip","Line","stroke","strokeWidth","dot","requests","fetchCases","fetchDeaths","fetchConfirmed","fetchRecovered","App","cases","setCases","getCasesData","fetch","then","res","json","array","el","render","exact","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.66226ec3.chunk.js","sourcesContent":["function Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>Covid-19</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nfunction Nav() {\r\n  const nav = ['Description', 'World', 'Country'];\r\n  const links = ['/', '/world', '/country'];\r\n  const [active, setActive] = useState(nav[0]);\r\n\r\n  const onActive = (i) => setActive(i);\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      <ul className=\"nav__list\">\r\n        {nav.map((elem, i) => (\r\n          <li key={elem} onClick={() => onActive(i)}>\r\n            {\r\n              <Link to={links[i]} className={`nav__item underline ${active === i ? 'active' : ''}`}>\r\n                {elem}\r\n              </Link>\r\n            }\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","function Description({ items }) {\r\n  const item = { ...items[items.length - 1] };\r\n  const confirm = Math.floor(item.confirmed / 1e6);\r\n  const recover = Math.floor(item.recovered / 1e6);\r\n  const death = Math.floor(item.deaths / 1e6);\r\n\r\n  return (\r\n    <div className=\"description\">\r\n      <p>\r\n        Пандемия COVID-19 — текущая пандемия, вызванная распространением коронавируса SARS-CoV-2.\r\n      </p>\r\n      <hr />\r\n      <p>\r\n        Вспышка заболеваемости вирусом впервые была зафиксирована в Ухане, Китай, в декабре 2019\r\n        года. 30 января 2020 года Всемирная организация здравоохранения объявила эту вспышку\r\n        чрезвычайной ситуацией в области общественного здравоохранения, имеющей международное\r\n        значение, а 11 марта — пандемией. На сегодня зарегистрировано свыше {confirm} млн случаев\r\n        заболевания по всему миру; более {death} млн человек скончалось и более {recover} млн\r\n        выздоровело.\r\n      </p>\r\n      <p>\r\n        В основном вирус SARS-CoV-2 передаётся при тесном контакте, чаще всего через небольшие\r\n        капли, образующиеся при кашле, чихании и разговоре. Капли обычно падают на землю или на\r\n        поверхности, а не перемещаются по воздуху на большие расстояния. Передача может также\r\n        происходить через более мелкие капли, которые способны оставаться взвешенными в воздухе в\r\n        течение более длительных периодов времени.\r\n      </p>\r\n      <p>\r\n        К распространённым симптомам относятся лихорадка, кашель, утомление, одышка и аносмия\r\n        (потеря обоняния), возможна заложенность ушей. При осложнениях могут возникать острый\r\n        респираторный дистресс-синдром (ОРДС) и пневмония (воспаление лёгких).\r\n      </p>\r\n      <p>\r\n        В качестве профилактических мер рекомендуются мытьё рук, прикрывать рот и нос локтевым\r\n        сгибом при кашле или чихании, социальное дистанцирование, ношение защитной маски в\r\n        общественных местах, дезинфекция поверхностей, увеличение вентиляции и фильтрации воздуха в\r\n        помещении, а также мониторинг и самоизоляция для людей, подозревающих, что они инфицированы.\r\n      </p>\r\n      <p>\r\n        Пандемия COVID-19 стала причиной серьёзных социально-экономических последствий, включая\r\n        крупнейшую мировую рецессию после Великой депрессии и массовый голод, затронувший около 265\r\n        млн человек.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Description;\r\n","function CountryInfo({ selection }) {\r\n  return (\r\n    <div>\r\n      {selection &&\r\n        selection.map((elem, i) => (\r\n          <div className=\"info-country\">\r\n            <p key={i + 8}>Country: {elem.country}</p>\r\n            <p key={i + 9}>Capital city: {elem.capital_city}</p>\r\n            <p key={i + 10}>Continent: {elem.continent}</p>\r\n            <p key={i + 11}>Location: {elem.location}</p>\r\n            <p key={i + 12}>\r\n              Square area: {elem.sq_km_area.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')} km\r\n              <sup>2</sup>\r\n            </p>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountryInfo;\r\n","function CovidInfo({ selection }) {\r\n  return (\r\n    <div>\r\n      {selection.length\r\n        ? selection.map((elem, i) => (\r\n            <div className=\"info\">\r\n              <div className=\"info__item population\" key={i}>\r\n                <span className=\"info__item-title\">Population</span>\r\n                <span className=\"info__item-elem\">\r\n                  {elem.population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}\r\n                </span>\r\n              </div>\r\n              <div className=\"info__item population\" key={i + 1}>\r\n                <span className=\"info__item-title\">Life expectancy</span>\r\n                <span className=\"info__item-elem\">{elem.life_expectancy}</span>\r\n              </div>\r\n              <div className=\"info__item confirmed\" key={i + 2}>\r\n                <span className=\"info__item-title\">Confirmed</span>\r\n                <span className=\"info__item-elem\">\r\n                  {elem.confirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}\r\n                </span>\r\n              </div>\r\n              <div className=\"info__item recovered\" key={i + 3}>\r\n                <span className=\"info__item-title\">Recovered</span>\r\n                <span className=\"info__item-elem\">\r\n                  {elem.recovered.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}\r\n                </span>\r\n              </div>\r\n              <div className=\"info__item confirmed\" key={i + 4}>\r\n                <span className=\"info__item-title\">\r\n                  Infections per km<sup>2</sup>\r\n                </span>\r\n                <span className=\"info__item-elem\">\r\n                  {(elem.confirmed / elem.sq_km_area).toFixed(1)}\r\n                </span>\r\n              </div>\r\n              <div className=\"info__item confirmed\" key={i + 5}>\r\n                <span className=\"info__item-title\">Infections per thousand</span>\r\n                <span className=\"info__item-elem\">\r\n                  {((elem.confirmed / elem.population) * 1000).toFixed(1)}\r\n                </span>\r\n              </div>\r\n              <div className=\"info__item deaths\" key={i + 6}>\r\n                <span className=\"info__item-title\">Deaths</span>\r\n                <span className=\"info__item-elem\">\r\n                  {elem.deaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}\r\n                </span>\r\n              </div>\r\n              <div className=\"info__item deaths\" key={i + 7}>\r\n                <span className=\"info__item-title\">Mortality rate, %</span>\r\n                <span className=\"info__item-elem\">\r\n                  {((elem.deaths / elem.confirmed) * 100).toFixed(1)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))\r\n        : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CovidInfo;\r\n","function SelectionList({ arr, handleOnClick, selectionItem }) {\r\n  return (\r\n    <div className=\"selection-list\">\r\n      {arr.map((elem) => (\r\n        <div className=\"selection-item\" key={elem.abbreviation}>\r\n          <button className=\"selection-btn\" type=\"button\" onClick={() => handleOnClick(elem)}>\r\n            <span>{elem.country}</span>\r\n            <span>\r\n              {selectionItem(elem) && (\r\n                <img\r\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/44/Ok_font_awesome.svg/512px-Ok_font_awesome.svg.png\"\r\n                  alt=\"selected\"\r\n                />\r\n              )}\r\n            </span>\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectionList;\r\n","import { useState } from \"react\";\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n   const [storedValue, setStoredValue] = useState(() => {\r\n     try {\r\n       const item = window.localStorage.getItem(key);\r\n       return item ? JSON.parse(item) : initialValue;\r\n     } catch (error) {\r\n       console.log(error);\r\n       return initialValue;\r\n     }\r\n   });\r\n   const setValue = (value) => {\r\n     try {\r\n       const valueToStore =\r\n         value instanceof Function ? value(storedValue) : value;\r\n       setStoredValue(valueToStore);\r\n       window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n     } catch (error) {\r\n       console.log(error);\r\n     }\r\n   };\r\n   return [storedValue, setValue];\r\n }\r\n\r\n export default useLocalStorage","import { useEffect, useRef, useState } from 'react';\r\nimport CountryInfo from '../components/CountryInfo';\r\nimport CovidInfo from '../components/CovidInfo';\r\nimport SelectionList from '../components/SelectionList';\r\nimport useLocalStorage from '../UseLocalStorage';\r\n\r\nfunction Country({ items, multiSelect = false }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [selection, setSelection] = useLocalStorage('selection', []);\r\n  const toggle = () => setOpen(!open);\r\n  const ref = useRef(null);\r\n\r\n  function handleOnClick(elem) {\r\n    if (!selection.some((cur) => cur.abbreviation === elem.abbreviation)) {\r\n      if (!multiSelect) {\r\n        setSelection([elem]);\r\n      } else if (multiSelect) {\r\n        setSelection([...selection, elem]);\r\n      }\r\n    }\r\n  }\r\n\r\n  function selectionItem(elem) {\r\n    if (selection.find((cur) => cur.abbreviation === elem.abbreviation)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  useEffect(() => {\r\n    ['click', 'touchend'].forEach((e) => {\r\n      document.addEventListener(e, close);\r\n    });\r\n  }, []);\r\n\r\n  const close = (e) => {\r\n    if (!e.path.includes(ref.current)) {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const filterArr = items.filter((elem) => elem.country);\r\n\r\n  return (\r\n    <div className=\"page__country\">\r\n      <div className=\"page__country-search\">\r\n        <div\r\n          className=\"selection\"\r\n          tabIndex={0}\r\n          role=\"button\"\r\n          onKeyPress={() => toggle(!open)}\r\n          onClick={() => toggle(!open)}\r\n          ref={ref}>\r\n          {selection.length ? selection.map((elem) => elem.country) : 'Search'}\r\n          <svg\r\n            className={open ? '' : 'rotated'}\r\n            width=\"8\"\r\n            height=\"5\"\r\n            viewBox=\"0 0 10 6\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n              d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n              fill=\"#2C2C2C\"\r\n            />\r\n          </svg>\r\n          {open && (\r\n            <SelectionList\r\n              arr={filterArr}\r\n              handleOnClick={handleOnClick}\r\n              selectionItem={selectionItem}\r\n            />\r\n          )}\r\n        </div>\r\n        <CountryInfo selection={selection} arr={items} />\r\n      </div>\r\n      <div>\r\n        <CovidInfo selection={selection} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Country;\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n   baseURL: 'https://covid-api.mmediagroup.fr/v1'\r\n})\r\n\r\nexport default instance","import useLocalStorage from '../UseLocalStorage';\r\nimport {\r\n  CartesianGrid,\r\n  LineChart,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n  Line,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport axios from '../axios';\r\nimport { useEffect } from 'react';\r\n\r\nfunction World({ fetchUrl, fetchUrl2, fetchUrl3 }) {\r\n  const [confirmed, setConfirmed] = useLocalStorage('confirmed', []);\r\n  const [deaths, setDeaths] = useLocalStorage('deaths', []);\r\n  const [recovered, setRecovered] = useLocalStorage('recovered', []);\r\n  // ---------------------------------------------------------------\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setConfirmed(request.data.Global.All.dates);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n  const key = Object.keys(confirmed);\r\n  const value = Object.values(confirmed);\r\n  const data = [];\r\n  // ---------------------------------------------------------------\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl3);\r\n      setRecovered(request.data.Global.All.dates);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl3]);\r\n  const value2 = Object.values(recovered);\r\n  // ---------------------------------------------------------------\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl2);\r\n      setDeaths(request.data.Global.All.dates);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl2]);\r\n  const value3 = Object.values(deaths);\r\n  // ---------------------------------------------------------------\r\n  for (let i = 200; i >= 0; i--) {\r\n    data.push({\r\n      k: key[i],\r\n      Confirmed: value[i],\r\n      Recovered: value2[i],\r\n      Deaths: value3[i],\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"statistic\">\r\n      <ResponsiveContainer width=\"70%\" height={500}>\r\n        <LineChart data={data}>\r\n          <CartesianGrid />\r\n          <XAxis dataKey=\"k\" tickFormatter={(s) => s.slice(2, 7).replace('-', '/')} />\r\n          <YAxis\r\n            dataKey=\"Confirmed\"\r\n            axisLine={false}\r\n            tickLine={false}\r\n            tickCount={7}\r\n            tickFormatter={(n) => Math.floor(n / 1e6)}\r\n          />\r\n          <Tooltip />\r\n          <Line type=\"monotone\" dataKey=\"Confirmed\" stroke=\"red\" strokeWidth={3} dot={false} />\r\n          <Line type=\"monotone\" dataKey=\"Recovered\" stroke=\"green\" strokeWidth={3} dot={false} />\r\n          <Line type=\"monotone\" dataKey=\"Deaths\" stroke=\"grey\" strokeWidth={3} dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n\r\n      <div className=\"statistic__info\">\r\n        <div className=\"statistic__item confirmed\">\r\n          <span className=\"info__item-title\">Confirmed</span>\r\n          <span className=\"info__item-elem\">\r\n            {data[200].Confirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}\r\n          </span>\r\n          <span className=\"info__item-day\">\r\n            + {data[200].Confirmed - data[199].Confirmed} per day\r\n          </span>\r\n        </div>\r\n        <div className=\"statistic__item recovered\">\r\n          <span className=\"info__item-title\">Recovered</span>\r\n          <span className=\"info__item-elem\">\r\n            {data[200].Recovered.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}\r\n          </span>\r\n          <span className=\"info__item-day\">\r\n            + {data[200].Recovered - data[199].Recovered} per day\r\n          </span>\r\n        </div>\r\n        <div className=\"statistic__item deaths\">\r\n          <span className=\"info__item-title\">Deaths</span>\r\n          <span className=\"info__item-elem\">\r\n            {data[200].Deaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}\r\n          </span>\r\n          <span className=\"info__item-day\">+ {data[200].Deaths - data[199].Deaths} per day</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default World;\r\n","const requests = {\r\n   fetchCases: '/cases',\r\n   fetchDeaths: '/history?status=deaths',\r\n   fetchConfirmed: '/history?status=confirmed',\r\n   fetchRecovered: '/history?status=recovered',\r\n}\r\n\r\nexport default requests","import {useState, useEffect} from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Nav from './components/Nav';\nimport Description from './pages/Description';\nimport Country from './pages/Country';\nimport World from './pages/World';\nimport requests from './requests'\n\nimport './App.css';\n\nconst API = `https://covid-api.mmediagroup.fr/v1/cases`\n\nfunction App() {\n  const [cases, setCases] = useState([])\n\n  const getCasesData = async () => \n    await fetch(API)\n      .then(res => res.json())\n      .then(data => setCases(data))\n  \n  useEffect(() => {\n    getCasesData()\n  }, [])\n\n  const array = Object.values(cases).map((el) => el.All);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Nav />\n      <div className=\"container\">\n        <Route path='/' render={() => <Description items={array} />} exact />\n        <Route path='/world' render={() => <World fetchUrl={requests.fetchConfirmed} fetchUrl2={requests.fetchDeaths} fetchUrl3={requests.fetchRecovered}/>} exact />\n        <Route path='/country' render={() => <Country items={array} />} exact />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}